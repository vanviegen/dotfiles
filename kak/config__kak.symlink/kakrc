def -docstring 'invoke fzf to open a file' \
  fzf-file %{ %sh{
    FILE=`rg --files | fzf-tmux -d 15`
    if [ -n "$FILE" ]; then
      echo "edit ${FILE}"
    fi
  }}

def -docstring 'invoke fzf to select a buffer' \
  fzf-buffer %{ %sh{
    BUFFER=`echo ${kak_buflist} | tr : '\n' | fzf-tmux -d 15`
    if [ -n "$BUFFER" ]; then
      echo "buffer ${BUFFER}"
    fi
  }}

map global normal <c-p> :fzf-file<ret>
map global normal <c-b> :fzf-buffer<ret>

def -docstring 'tmux create vertical split' \
  tmux-vert %{ %sh{
	  TMUX=${kak_client_env_TMUX:-$TMUX} tmux split-window -v "~/.dotfiles/bin/kak -c $kak_session"
  }}

def -docstring 'tmux create horizontal split' \
  tmux-hor %{ %sh{
	  TMUX=${kak_client_env_TMUX:-$TMUX} tmux split-window -h "~/.dotfiles/bin/kak -c $kak_session"
  }}

map global normal <a-v> :tmux-vert<ret>
map global normal <a-h> :tmux-hor<ret>
map global normal <f5> ":grep "

# use tabs
set global tabstop 4
set global indentwidth 0

# use ripgrep for file search
set global grepcmd 'rg --no-heading --line-number --color never'

# scroll when cursor gets 3 lines or 10 columns near the screen border
set global scrolloff 3,10

# narrate everything we're doing - comment this out once you're comfortable with kakoune
set global autoinfo command|onkey|normal 

# disable auto autocomplete
set global autoshowcompl false

# no need for clippy
set global ui_options "ncurses_assistant=none"

# show matching brackets
hook global WinCreate .* %{ addhl show_matching }


